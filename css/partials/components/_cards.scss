@use "../utils";



.card {
    border-radius: 1.25rem;
    transition: transform 250ms, filter 250ms;

    &:is(:hover, :focus) {
        transform: scale(1.01);
        &:has(.card-image) {
            filter: brightness(1.02) saturate(1.05);
        }
    }
}

.instructions-cards {
    @include utils.flex-center;
    flex-direction: column;
    gap: 1rem;

    & .card {
        width: min(20rem, 90vw);
        height: 4rem;
        display: flex;
        align-items: center;
        background-color: utils.$section-bg-clr;
        filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.1));
        transition: filter 250ms ease-in, color 250ms ease-in;
        
        &:hover {
            filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.3));
            & .fa-solid {
                color: utils.$btn-bg-clr;
            }
        }
    }
    
    & .card-content {
        display: flex;
        gap: 1rem;
        padding-left: 2rem;
    }
}

.restaurants-cards {
        display: grid;
        grid-auto-flow: dense;
        grid-template-rows: 10rem auto;
        container-type: inline-size;
        gap: 1rem;

    & .card {
        display: grid;
        grid-row: span 2;
        grid-template-rows: subgrid;
        gap: 1rem;
        background-color: utils.$card-bg-clr;
        overflow: hidden;
        position: relative;

        & > :not(.card-image, .container-tag) {
            margin-inline: utils.$card-padding;
        }
    
        & > :last-child:not(.card-image, .container-tag) {
            margin-block-end: utils.$card-padding;
        }
    }   

    & .card-image {
        width: 100%;
        height: 10rem;
        object-fit: cover;
    }

    & .container-tag {
        width: 100%;
        display: flex;
        justify-content: flex-end;
        position: absolute;
    }

    & .card-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
}
