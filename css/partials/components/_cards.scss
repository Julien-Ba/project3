@use "../utils";

%card-overflow {
    overflow: hidden;

    *:not(.card-icon) {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

%card-shadow {
    filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.1));
    @include utils.transition-out(filter);

    &:is(:hover, :focus, :focus-within) {
        filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.2));
        @include utils.transition-in(filter);
    }
}

%card-scale {
    @include utils.transition-out(transform);

    &:is(:hover, :focus, :focus-within) {
        transform: scale(1.01);
        @include utils.transition-in(transform);
    }
}

.card {
    border-radius: 1.25rem;
    background-color: utils.$card-bg-clr;
    @include utils.transition-out(filter);

    > :not(.card-image, .container-tag) {
        margin-inline: utils.$card-padding;
    }

    > :first-child:not(.card-image, .container-tag) {
        margin-block-start: utils.$card-padding;
    }

    > :last-child:not(.card-image, .container-tag) {
        margin-block-end: utils.$card-padding;
    }

    &:is(:hover, :focus, :focus-within) {
        &:has(.card-image) {
            filter: brightness(1.05) saturate(1.05);
            @include utils.transition-in(filter);
        }
    }
}

.instructions-cards .card {
    width: min(
        20rem,
        calc(90vw - 2rem)
    ); // 90vw for the margin on mobile + 2rem for the counter
    height: 4rem;
    display: flex;
    align-items: center;
    position: relative;
    background-color: utils.$section-bg-clr;
    //@include utils.transition-out(color);
    @extend %card-shadow;

    &::before {
        counter-increment: instruction;
        content: counter(instruction);
        width: 2rem;
        height: 2rem;
        @include utils.flex-center;
        position: absolute;
        left: -1rem;
        background-color: utils.$btn-bg-clr;
        border-radius: 50%;
        color: utils.$main-bg-clr;
    }

    &:hover .fa-idle {
        color: utils.$btn-bg-clr;
        @include utils.transition-in(color);
    }

    &-content {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding-left: 2rem;
    }
}

.restaurants-cards .card {
    position: relative;
    gap: 1rem;
    @extend %card-overflow;
    @extend %card-scale;

    .card-image {
        width: 100%;
        height: 10rem;
        object-fit: cover;
    }

    .container-tag {
        width: 100%;
        display: flex;
        justify-content: flex-end;
        position: absolute;
    }

    .card-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
}

.menu-cards .card {
    display: grid;
    grid-template-columns: 1fr 4rem 0;
    grid-template-rows: repeat(2, 1fr);
    @extend %card-overflow;
    @extend %card-shadow;
    transition: grid-template-columns 500ms ease-out;

    .menu-card-title {
        grid-column: -1/1;
    }

    &:hover {
        grid-template-columns: 1fr 4rem 5rem;
        transition: grid-template-columns 250ms ease-out;
    }

    &::before {
        content: "";
        width: 100%;
        height: 100%;
        position: fixed;
        grid-column: 3;
        background-color: utils.$highlight-clr-light;
    }

    &::after {
        content: "\f00c";
        font-family: fontawesome;
        width: 2rem;
        height: 2rem;
        position: fixed;
        grid-column: 3;
        justify-self: center;
        align-self: center;
        text-align: center;
        align-content: center;
        border-radius: 50%;
        background-color: utils.$main-bg-clr;
        color: utils.$highlight-clr-light;
        transform: translateX(2rem);
        transition: transform 500ms ease-out;
    }

    &:hover::after {
        transform: translate(0);
        transition: transform 250ms ease-out;
    }
}

.menu-cards {
    @for $i from 1 through 4 {
        .card:nth-child(#{$i}) {
            animation: slide-card ($i * 500ms) ease-out;
        }
    }
}

@include utils.respond-only-to("tablet") {
    .instructions-cards .card {
        width: 30rem;

        &::before {
            left: 4rem;
            filter: drop-shadow(0px 3px 3px rgba(0, 0, 0, 0.2));
            @include utils.transition-out(filter);
        }

        &:hover::before {
            filter: drop-shadow(0px 3px 3px rgba(0, 0, 0, 0.4));
            @include utils.transition-in(filter);
        }

        &-content {
            padding-left: 9rem;
        }
    }
}
